l.holidays
l.id
l.payments.destroy!
c
DateTime.now
DateTime.now.strftime('%Y-%m-%d %H:%M:%S')
repository.adapter.execute("update payments set deleted_at='#{DateTime.now.strftime('%Y-%m-%d %H:%M:%S')}' where loan_id = 28202 and type in (1,2)")
l = Loan.get 28202
l = Loan.get 28204
l = Loan.get 31187
l._show_his
LoanHistory.all(:status => :repaid).aggregate(:loan_id)
Time.now
Time.now.hour
Time.now.hourexit
File.read("log/upgrade-29020")
f = File.read("log/upgrade-29020")
f.scan(/\d+/\s-/)
f.scan(/\d+\s-/)
f.scan(/\d+/)
f.scan(/\d+\s\-\s/)
f.scan(/\d+\s/)
f.scan(/\d+\s/).map(&:to_i)
l = Loan.get 5513
c.center = Center.ger(c.center_id)
l.save
c.center
c.client_center_memberships
l.loan_center_memberships
l.reload
l.center
l = Loan.get 55513
u = User.first
u.role
u.role = "admin"
l = Loan.get 54612
c = l.client
c.center = Center.get(c.center_id)
c.save
c.errors
c.save!
l.send(:set_center)
l.save!
l.update_history
Math.log(0.00001) / Math.log(10)
Math.log(0.000001) / Math.log(10)
(Math.log(0.000001) / Math.log(10)).round(0)
cd 1
show-source round
n = 61.53846153846154
n / 100000
n / 0.000001
(n / 0.000001).round
(n / 0.000001).round * 0.000001
((n / 0.000001).round * 0.000001).round(6)
100.round(2)
100.send(:round,2)
d = DigiDocument.new
d.errors
d.document_type = "receipt"
d.user = User.first
d.valid?
d.save
d.receipt
u = User.new(:name => 'abc', :password => 'secret', :password_confirmation => 'secret', :role => 'customer')
u.errors
u.email => "abc@def.com"
u.email = "abc@def.com"
u.save
require 'factory_girl_rails'
require 'spec/factories.rb'
`pwd`
Factory.define do
require 'spec/factories'
DatabaseCleaner.strategy = :truncation
DatabaseCleaner.orm = "mongoid"
DatabaseCleaner.clean
FactoryGirl.define do
  sequence(:email)          { |n| "my_email@example#{n}.com" }
  sequence(:staff_email)    { |n| "my_staff_email@example#{n}.com" }
  sequence(:org_name)       { |n| ["Bhimji Notandas","Westside","Lifestyle","Shoppers Stop","Spencers","What Katy Did"][n%5] + " #{n}"}
  sequence(:receipt_title)  { |n| ["","shopping", "nothing","jlt"][n%3] + " #{n}" }
  factory :user do
    name        'Test User'
    password    'secret'
    email
    factory :customer do
      role "customer"
      email
    end
  end
end
FactoryGirl.create(:user)
FactoryGirl.create(:customer)
{:a => 1, :b => 2}.include?({:a => 1})
{:a => 1, :b => 2}.include?(:a => 1)
{:a => 1, :b => 2}.include?([:a,1])
{:a => 1, :b => 2}.include?(:a,1)
{:a => 1, :b => 2}.keys.include?(:a)
exit
